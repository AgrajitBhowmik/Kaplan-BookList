{"version":3,"sources":["components/Navbar.jsx","common/Input.jsx","fakeDB.js","components/CreateBookForm.jsx","components/NotFound.jsx","components/Cards.jsx","common/SearchBox.jsx","common/CustomAlert.jsx","components/MainComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavbarComponent","loc","Navbar","expand","variant","bg","className","Container","fluid","to","Brand","pathname","Button","Input","name","value","label","error","onChange","useState","setShow","Form","Group","Label","htmlFor","Control","type","id","placeholder","Toast","onClose","Body","booklists","isAdded","getBooklists","CreateBookForm","match","bookData","title","authors","publisher","publishedDate","errorData","setBookData","history","useHistory","useEffect","path","ex","replace","populateBookData","schema","Joi","string","required","handleChange","event","target","errors","errorMessage","obj","requiredSchema","validate","details","message","validateProperty","prevBookData","onSubmit","preventDefault","abortEarly","item","console","log","val","split","NotFound","props","Cards","cardsInfo","map","card","index","Card","style","width","Title","volumeInfo","height","background","Text","toString","SearchBox","CustomAlert","handleShow","text","Alert","dismissible","Heading","MainComponent","cardInfo","setCardInfo","searchField","setSearchField","show","length","setTimeout","fetch","then","response","json","items","catch","e","filteredBooks","filter","toLowerCase","includes","App","withRouter","location","Fragment","component","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80fb2c6a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Navbar, Button } from \"react-bootstrap\";\r\n\r\nfunction NavbarComponent({ loc }) {\r\n  return (\r\n    <Navbar expand=\"lg\" variant=\"primary\" bg=\"light\" className=\"mb-3\">\r\n      <Container fluid>\r\n        <Link to=\"/books\">\r\n          <Navbar.Brand>\r\n            <b>BOOKS</b>\r\n          </Navbar.Brand>\r\n        </Link>\r\n        {loc.pathname === \"/books\" && (\r\n          <Link to=\"/form/new\">\r\n            <Button variant=\"outline-primary\">Create New Book</Button>\r\n          </Link>\r\n        )}\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Toast } from \"react-bootstrap\";\r\n\r\nfunction Input({ name, value, label, error, onChange }) {\r\n  const [show, setShow] = useState(true);\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label htmlFor={name}>{label}</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        value={value}\r\n        name={name}\r\n        id={name}\r\n        onChange={onChange}\r\n        placeholder={`Enter ${label}`}\r\n      />\r\n      {error && (\r\n        <Toast className=\"bg-danger\" onClose={() => setShow(false)}>\r\n          <Toast.Body>\r\n            <b>{error}</b>\r\n          </Toast.Body>\r\n        </Toast>\r\n      )}\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","let booklists = [];\r\nlet isAdded = false;\r\n\r\nexport function getBooklists() {\r\n  return booklists;\r\n}\r\n\r\nexport function addBooklists(val) {\r\n  booklists = [...val];\r\n}\r\n\r\nexport function addtoBooklists(val) {\r\n  booklists = [val, ...booklists];\r\n  isAdded = true;\r\n}\r\n\r\nexport function bookAdded() {\r\n  return isAdded;\r\n}\r\n\r\nexport function setIsBookAdded() {\r\n  isAdded = false;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"./../common/Input\";\r\nimport { addtoBooklists } from \"./../fakeDB\";\r\n\r\nconst CreateBookForm = ({ match }) => {\r\n  const [{ bookData, errorData }, setBookData] = useState({\r\n    bookData: { title: \"\", authors: \"\", publisher: \"\", publishedDate: \"\" },\r\n    errorData: {},\r\n  });\r\n  let history = useHistory();\r\n\r\n  function populateBookData() {\r\n    try {\r\n      if (match.path === \"/form/new\") {\r\n        setBookData(() => {\r\n          return {\r\n            bookData: {\r\n              title: \"\",\r\n              authors: \"\",\r\n              publisher: \"\",\r\n              publishedDate: \"\",\r\n            },\r\n            errorData: {},\r\n          };\r\n        });\r\n        return;\r\n      }\r\n    } catch (ex) {\r\n      history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    populateBookData();\r\n  }, []);\r\n\r\n  const schema = {\r\n    title: Joi.string().required().label(\"Title\"),\r\n    authors: Joi.string().required().label(\"Authors\"),\r\n    publisher: Joi.string().required().label(\"Publisher\"),\r\n    publishedDate: Joi.string().required().label(\"Published Date\"),\r\n  };\r\n\r\n  function validate() {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(bookData, schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  }\r\n\r\n  function validateProperty(name, value) {\r\n    const obj = { [name]: value };\r\n    const requiredSchema = { [name]: schema[name] };\r\n    const { error } = Joi.validate(obj, requiredSchema);\r\n    return error ? error.details[0].message : null;\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const errors = { ...errorData };\r\n    const errorMessage = validateProperty(name, value);\r\n    if (errorMessage) errors[name] = errorMessage;\r\n    else delete errors[name];\r\n\r\n    setBookData((prevBookData) => {\r\n      return {\r\n        bookData: { ...prevBookData.bookData, [name]: value },\r\n        errorData: errors,\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const errors = validate();\r\n    setBookData((prevBookData) => {\r\n      return {\r\n        bookData,\r\n        errorData: errors,\r\n      };\r\n    });\r\n    if (errors) {\r\n      console.log(errors);\r\n      return;\r\n    }\r\n\r\n    let { title, authors, publisher, publishedDate } = bookData;\r\n\r\n    addtoBooklists({\r\n      [\"volumeInfo\"]: {\r\n        title,\r\n        authors: authors.split(\",\"),\r\n        publisher,\r\n        publishedDate,\r\n      },\r\n    });\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Container className=\"px-5\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          name=\"title\"\r\n          value={bookData.title}\r\n          label=\"Title\"\r\n          onChange={handleChange}\r\n          error={errorData[\"title\"]}\r\n        />\r\n        <Input\r\n          name=\"authors\"\r\n          value={bookData.authors}\r\n          label=\"Authors\"\r\n          onChange={handleChange}\r\n          error={errorData[\"authors\"]}\r\n        />\r\n        <Input\r\n          name=\"publisher\"\r\n          value={bookData.publisher}\r\n          label=\"Publisher\"\r\n          onChange={handleChange}\r\n          error={errorData[\"publisher\"]}\r\n        />\r\n        <Input\r\n          name=\"publishedDate\"\r\n          value={bookData.publishedDate}\r\n          label=\"Published Date\"\r\n          onChange={handleChange}\r\n          error={errorData[\"publishedDate\"]}\r\n        />\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateBookForm;\r\n","import React from \"react\";\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <div>\r\n      <h3>Page Not Found</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Box.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Cards = ({ cardsInfo }) => {\r\n  const renderCard = (card, index) => {\r\n    return (\r\n      <Card style={{ width: \"18rem\" }} key={index} className=\"box\">\r\n        <Card.Body>\r\n          <Card.Title>{card.volumeInfo.title}</Card.Title>\r\n          <hr style={{ height: \"1px\", background: \"#007bff\" }}></hr>\r\n          <Card.Text>Authors : {card.volumeInfo.authors.toString()}</Card.Text>\r\n          <Card.Text>Publisher : {card.volumeInfo.publisher}</Card.Text>\r\n          <Card.Text>\r\n            Published Date : {card.volumeInfo.publishedDate}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return <div className=\"grid\">{cardsInfo.map(renderCard)}</div>;\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n\r\nfunction SearchBox({ value, handleChange }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search...\"\r\n        value={value}\r\n        className=\"mb-3 ml-3 search\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nfunction CustomAlert({ variant, handleShow, text }) {\r\n  return (\r\n    <Alert variant={variant} onClose={() => handleShow(false)} dismissible>\r\n      <Alert.Heading>{text}</Alert.Heading>\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default CustomAlert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Box.css\";\r\nimport { Container, Alert } from \"react-bootstrap\";\r\nimport {\r\n  addBooklists,\r\n  getBooklists,\r\n  setIsBookAdded,\r\n  bookAdded,\r\n} from \"../fakeDB\";\r\nimport Cards from \"./Cards\";\r\nimport SearchBox from \"../common/SearchBox\";\r\nimport CustomAlert from \"./../common/CustomAlert\";\r\n\r\nfunction MainComponent({ history }) {\r\n  const [cardInfo, setCardInfo] = useState([]);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (getBooklists().length == 0) {\r\n      fetch(\r\n        \"https://www.googleapis.com/books/v1/volumes?q=kaplan%20test%20prep\"\r\n      )\r\n        .then(function (response) {\r\n          return response.json();\r\n        })\r\n        .then(function (json) {\r\n          addBooklists(json.items);\r\n          setCardInfo(getBooklists());\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"Request failed\", error);\r\n        });\r\n\r\n      return;\r\n    }\r\n    setCardInfo(getBooklists());\r\n    if (bookAdded() === true) {\r\n      setShow(true);\r\n      setTimeout(() => {\r\n        setShow(false);\r\n      }, 3000);\r\n      setIsBookAdded();\r\n    }\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchField(e.target.value);\r\n    const filteredBooks = getBooklists().filter((card) => {\r\n      return (\r\n        card.volumeInfo.title\r\n          .toLowerCase()\r\n          .includes(e.target.value.toLowerCase()) ||\r\n        card.volumeInfo.authors\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(e.target.value.toLowerCase()) ||\r\n        card.volumeInfo.publisher\r\n          .toLowerCase()\r\n          .includes(e.target.value.toLowerCase())\r\n      );\r\n    });\r\n    setCardInfo(filteredBooks);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      {show && (\r\n        <CustomAlert\r\n          variant=\"success\"\r\n          handleShow={setShow}\r\n          text={\"New Book Added Successfully\"}\r\n        />\r\n      )}\r\n      <SearchBox value={searchField} handleChange={handleSearch} />\r\n      <h4 className=\"ml-3\">All Books</h4>\r\n      <p className=\"ml-3\">\r\n        Showing {cardInfo.length} books details from the database.\r\n      </p>\r\n      <Cards cardsInfo={cardInfo} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainComponent;\r\n","import React from \"react\";\nimport { Route, Redirect, Switch, withRouter } from \"react-router-dom\";\nimport NavbarComponent from \"./components/Navbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CreateBookForm from \"./components/CreateBookForm\";\nimport NotFound from \"./components/NotFound\";\nimport MainComponent from \"./components/MainComponent\";\n\nconst App = withRouter(({ location }) => {\n  return (\n    <React.Fragment>\n      <NavbarComponent loc={location} />\n      <main>\n        <Switch>\n          <Route path=\"/books\" component={MainComponent}></Route>\n          <Route path=\"/form/new\" component={CreateBookForm}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/books\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}